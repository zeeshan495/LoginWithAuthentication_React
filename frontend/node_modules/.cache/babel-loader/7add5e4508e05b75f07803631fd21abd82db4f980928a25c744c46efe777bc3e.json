{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJS\\\\LoginWithAuthentication_React\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  if (mode !== 'login' && mode !== 'signup') {\n    throw new Error('Unsupported mode');\n  }\n  const response = await fetch(`http://localhost:8080/${mode === 'login' ? 'login' : 'signup'}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw new Error('Could not authenticate user.');\n  }\n  return response;\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","data","formData","authData","email","password","Error","response","fetch","method","headers","body","JSON","stringify","status","ok","$RefreshReg$"],"sources":["C:/ReactJS/LoginWithAuthentication_React/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password'),\n  };\n\n  if (mode !== 'login' && mode !== 'signup') {\n    throw new Error('Unsupported mode');\n  }\n\n  const response = await fetch(\n    `http://localhost:8080/${mode === 'login' ? 'login' : 'signup'}`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(authData),\n    }\n  );\n\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw new Error('Could not authenticate user.');\n  }\n\n  return response;\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,MAAMC,IAAI,GAAG,MAAMN,OAAO,CAACO,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACD,GAAG,CAAC,OAAO,CAAC;IACxBK,QAAQ,EAAEJ,IAAI,CAACD,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAM,IAAIO,KAAK,CAAC,kBAAkB,CAAC;EACrC;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yBAAyBT,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,QAAQ,EAAE,EAChE;IACEU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;EAC/B,CACF,CAAC;EAED,IAAII,QAAQ,CAACO,MAAM,KAAK,GAAG,IAAIP,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;IACtD,OAAOP,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIT,KAAK,CAAC,8BAA8B,CAAC;EACjD;EAEA,OAAOC,QAAQ;AACjB;AAAC,IAAAd,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}